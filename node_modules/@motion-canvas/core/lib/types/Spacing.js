import { CompoundSignalContext } from '../signals';
import { map } from '../tweening';
export class Spacing {
    static createSignal(initial, interpolation = Spacing.lerp) {
        return new CompoundSignalContext(['top', 'right', 'bottom', 'left'], (value) => new Spacing(value), initial, interpolation).toSignal();
    }
    static lerp(from, to, value) {
        return new Spacing(map(from.top, to.top, value), map(from.right, to.right, value), map(from.bottom, to.bottom, value), map(from.left, to.left, value));
    }
    get x() {
        return this.left + this.right;
    }
    get y() {
        return this.top + this.bottom;
    }
    constructor(one = 0, two, three, four) {
        this.top = 0;
        this.right = 0;
        this.bottom = 0;
        this.left = 0;
        if (one === undefined || one === null) {
            return;
        }
        if (Array.isArray(one)) {
            four = one[3];
            three = one[2];
            two = one[1];
            one = one[0];
        }
        if (typeof one === 'number') {
            this.top = one;
            this.right = two !== undefined ? two : one;
            this.bottom = three !== undefined ? three : one;
            this.left = four !== undefined ? four : two !== undefined ? two : one;
            return;
        }
        this.top = one.top;
        this.right = one.right;
        this.bottom = one.bottom;
        this.left = one.left;
    }
    lerp(to, value) {
        return Spacing.lerp(this, to, value);
    }
    scale(value) {
        return new Spacing(this.top * value, this.right * value, this.bottom * value, this.left * value);
    }
    addScalar(value) {
        return new Spacing(this.top + value, this.right + value, this.bottom + value, this.left + value);
    }
    toSymbol() {
        return Spacing.symbol;
    }
    toString() {
        return `Spacing(${this.top}, ${this.right}, ${this.bottom}, ${this.left})`;
    }
    toUniform(gl, location) {
        gl.uniform4f(location, this.top, this.right, this.bottom, this.left);
    }
    serialize() {
        return {
            top: this.top,
            right: this.right,
            bottom: this.bottom,
            left: this.left,
        };
    }
}
Spacing.symbol = Symbol.for('@motion-canvas/core/types/Spacing');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BhY2luZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eXBlcy9TcGFjaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUIscUJBQXFCLEVBQWMsTUFBTSxZQUFZLENBQUM7QUFDOUUsT0FBTyxFQUF3QixHQUFHLEVBQUMsTUFBTSxhQUFhLENBQUM7QUF5QnZELE1BQU0sT0FBTyxPQUFPO0lBVVgsTUFBTSxDQUFDLFlBQVksQ0FDeEIsT0FBc0MsRUFDdEMsZ0JBQWdELE9BQU8sQ0FBQyxJQUFJO1FBRTVELE9BQU8sSUFBSSxxQkFBcUIsQ0FDOUIsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsRUFDbEMsQ0FBQyxLQUFzQixFQUFFLEVBQUUsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFDOUMsT0FBTyxFQUNQLGFBQWEsQ0FDZCxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ2YsQ0FBQztJQUVNLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBYSxFQUFFLEVBQVcsRUFBRSxLQUFhO1FBQzFELE9BQU8sSUFBSSxPQUFPLENBQ2hCLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLEVBQzVCLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLEVBQ2hDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEVBQ2xDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQy9CLENBQUM7SUFDSixDQUFDO0lBRUQsSUFBVyxDQUFDO1FBQ1YsT0FBTyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDaEMsQ0FBQztJ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