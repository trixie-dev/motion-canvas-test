"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const partials_1 = require("./partials");
const plugins_1 = require("./plugins");
const utils_1 = require("./utils");
exports.default = ({ project = './src/project.ts', output = './output', bufferedAssets = /^$/, editor = '@motion-canvas/ui', proxy, buildForEditor, } = {}) => {
    const plugins = [];
    let config = {
        output: path_1.default.resolve(output),
        projects: (0, utils_1.getProjects)(project),
    };
    return [
        {
            name: 'motion-canvas',
            async configResolved(resolvedConfig) {
                plugins.push(...resolvedConfig.plugins
                    .filter(plugins_1.isPlugin)
                    .map(plugin => plugin[plugins_1.PLUGIN_OPTIONS]));
                for (const plugin of plugins) {
                    const newConfig = await plugin.config?.(config);
                    if (newConfig) {
                        config = { ...config, ...newConfig };
                    }
                }
            },
        },
        (0, partials_1.metaPlugin)(),
        (0, partials_1.settingsPlugin)(),
        (0, partials_1.scenesPlugin)(),
        (0, partials_1.exporterPlugin)({ outputPath: config.output }),
        (0, partials_1.editorPlugin)({ editor, projects: config.projects }),
        (0, partials_1.projectsPlugin)({ projects: config.projects, plugins, buildForEditor }),
        (0, partials_1.assetsPlugin)({ bufferedAssets }),
        (0, partials_1.webglPlugin)(),
        (0, partials_1.corsProxyPlugin)(proxy),
    ];
};
//# sourceMappingURL=main.js.map